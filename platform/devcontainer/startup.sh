#!/bin/bash
set -e

echo "üöÄ STARTUP ‚Äî –∑–∞–ø—É—Å–∫ –æ–∫—Ä—É–∂–µ–Ω–∏—è"

export DEBIAN_FRONTEND=noninteractive

# === üîê –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ===
USER_NAME=${USER_NAME:-kinga}
USER_ID=${USER_ID:-1001}
USER_PASSWORD=${USER_PASSWORD:-kinga123}

# === üßë –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ===
if ! id "$USER_NAME" &>/dev/null; then
    echo "üßë –°–æ–∑–¥–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $USER_NAME (UID=$USER_ID)"
    groupadd -g "$USER_ID" "$USER_NAME"
    useradd -m -s /bin/bash -u "$USER_ID" -g "$USER_ID" "$USER_NAME"
    echo "$USER_NAME:$USER_PASSWORD" | chpasswd

    # üîÅ –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É .bashrc –∏–∑ .profile
    echo 'if [ -f ~/.bashrc ]; then . ~/.bashrc; fi' >> /home/$USER_NAME/.profile
    chown $USER_NAME:$USER_NAME /home/$USER_NAME/.profile
fi

# === üóùÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH-–∫–ª—é—á–µ–π ===
if [[ -n "$SSH_AUTHORIZED_KEYS" ]]; then
    echo "üîê –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é authorized_keys"
    mkdir -p /home/$USER_NAME/.ssh
    echo "$SSH_AUTHORIZED_KEYS" > /home/$USER_NAME/.ssh/authorized_keys
    chown -R "$USER_NAME:$USER_NAME" "/home/$USER_NAME/.ssh"
    chmod 700 "/home/$USER_NAME/.ssh"
    chmod 600 "/home/$USER_NAME/.ssh/authorized_keys"
fi

# === üìå Kubernetes ENV vars ===
KUBE_API_IP=$(getent hosts kubernetes.default.svc | awk '{ print $1 }')
if [[ -n "$KUBE_API_IP" ]]; then
    echo "üåê –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é Kubernetes –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    cat <<EOF > /etc/profile.d/k8s_env.sh
    export KUBERNETES_SERVICE_HOST=${KUBE_API_IP}
    export KUBERNETES_SERVICE_PORT=443
EOF
    chmod +x /etc/profile.d/k8s_env.sh
fi

# === üîÅ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH ===
echo "üõ† –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é sshd_config..."
cat <<EOF > /etc/ssh/sshd_config
Port 22
PermitRootLogin no
PasswordAuthentication yes
PermitEmptyPasswords no
PermitUserEnvironment yes
AllowTcpForwarding yes
PermitTunnel yes
PermitOpen any
GatewayPorts yes
X11Forwarding no
ClientAliveInterval 60
ClientAliveCountMax 3
LoginGraceTime 30
UseDNS no
EOF

mkdir -p /run/sshd

# === ‚öôÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ GitLab Runner (–µ—Å–ª–∏ –µ—Å—Ç—å) ===
if [ -f /usr/local/bin/gitlab-runner ]; then
    echo "‚öôÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ GitLab Runner —Å–µ—Ä–≤–∏—Å–Ω–æ"
    gitlab-runner install --user=${USER_NAME} --working-directory=/home/${USER_NAME}
    gitlab-runner start
else
    echo "‚ö†Ô∏è GitLab Runner –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# === üìú –î–æ–±–∞–≤–ª–µ–Ω–∏–µ CA —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ ===
if [[ -f /usr/local/share/ca-certificates/dev-ca.crt ]]; then
    echo "üìú –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é CA —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç..."
    update-ca-certificates
else
    echo "‚ö†Ô∏è CA —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!"
fi

# === üö™ –ó–∞–ø—É—Å–∫ SSH ===
echo "üîë –ó–∞–ø—É—Å–∫ SSHD (foreground)"
exec /usr/sbin/sshd -D
